#summary Results of the current completed benchs.
#labels Featured,Documentation

The generated results can be found on the on the SVN :
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.csv Time bench]
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.csv Size bench]

= Versions =

  == mono --version : ==
{{{
Mono C# compiler version 1.9.1
}}}

  == gcc -v : ==
{{{
gcc (GCC) 4.2.4 (Debian 4.2.4-2)
}}}

  == valac --version : ==
{{{
Vala 0.5.2
}}}


= Time results = 

http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.png

||BenchName||C++||Mono||plain-C||Vala||
||mandelbrot||8.67||32.73||7.41||7.86||
||partialSums||19.59||33.74||21.01||21.06||
||recursive||7.77||17.91||5.08||5.24||
||binaryTrees||16.56||27.32||13.15||18.94||
||sumFile||10.00||14.34||7.99||8.96||
||fannkuch||6.77||16.11||7.32||8.40||
||spectralNorm||19.34||29.88||19.17||19.52||
||nsieve||19.82||21.19||19.93||19.74||
||nBody||16.76||31.67||15.78||15.58||

= Size results =

http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.png


||BenchName||C++||Mono||plain-C||Vala||
||mandelbrot||4402||1283||2225||2579||
||partialSums||2962||1414||5783||6217||
||recursive||6334||1400||5563||5987||
||binaryTrees||5540||1467||4548||5784||
||sumFile||2601||1093||1848||3815||
||fannkuch||5910||1378||4121||4704||
||spectralNorm||6256||1418||3903||3466||
||nsieve||2650||1170||1969||1993||
||nBody||6051||2213||3670||4987||

= Memory consumed results =

The method of memory measurement is pretty simple :
{{{
time --format=%M

    %M :    Maximum resident set  size  of  the  process
            during its lifetime, in Kilobytes.
}}}
The project's goal is to become part of "The Computer Language Benchmarks Game", not to implement complex memory measurement systems :).

_due to the time command bug, these results are not available_