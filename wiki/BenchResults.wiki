#summary Results of the current completed benchs.
#labels Featured,Documentation

The generated results can be found on the on the SVN :
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.csv Time bench]
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.csv Size bench]

= Versions =

  == mono --version : ==
{{{
Mono C# compiler version 1.9.1
}}}

  == gcc -v : ==
{{{
gcc (GCC) 4.2.4 (Debian 4.2.4-2)
}}}

  == valac --version : ==
{{{
Vala 0.3.4
}}}


= Time results = 

http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||110.28||8.74||7.46||9.46||
||partialSums||33.60||21.06||21.11||21.33||
||recursive||17.81||8.61||8.29||7.66||
||binaryTrees||12.11||5.60||7.12||
||sumFile||14.61||8.77||8.14||11.02||
||fannkuch||16.05||6.81||6.34||7.90||
||spectralNorm||29.89||20.19||19.67||19.92||
||nsieve||22.94||21.41||21.58||21.81||
||nBody||34.60||16.56||15.27||17.20||

= Size results =

http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||1281||2575||2223||3955||
||partialSums||1415||4794||4419||3054||
||recursive||1399||4815||4688||6459||
||binaryTrees||1467||4156||4573||
||sumFile||1092||2267||1865||2470||
||fannkuch||1376||3536||2889||4092||
||spectralNorm||1415||3265||3634||4886||
||nsieve||1170||2043||1981||2706||
||nBody||2213||5194||3783||5175||

= Memory consumed results =

The method of memory measurement is pretty simple :
{{{
time --format=%M

    %M :    Maximum resident set  size  of  the  process
            during its lifetime, in Kilobytes.
}}}
The project's goal is to become part of "The Computer Language Benchmarks Game", not to implement complex memory measurement systems :).

_due to the time command bug, these results are not available_