#summary Results of the current completed benchs.
#labels Featured,Documentation

The generated results can be found on the on the SVN :
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.csv Time bench]
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.csv Size bench]

= Versions =

  == mono --version : ==
{{{
Mono C# compiler version 1.9.1
}}}

  == gcc -v : ==
{{{
gcc (GCC) 4.2.4 (Debian 4.2.4-2)
}}}

  == valac --version : ==
{{{
Vala 0.3.4
}}}


= Time results = 

http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||32.59||8.69||7.39||9.61||
||partialSums||33.56||21.05||21.09||21.33||
||recursive||17.70||8.67||8.29||7.67||
||binaryTrees||27.34||18.95||13.17||16.54||
||sumFile||14.88||8.81||8.18||11.10||
||fannkuch||16.01||6.81||6.37||7.84||
||spectralNorm||29.83||20.18||19.74||19.84||
||nsieve||22.73||21.31||21.40||21.80||
||nBody||28.50||14.70||15.26||17.02||

= Size results =

http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||1280||2575||2223||3955||
||partialSums||1412||4794||4419||3054||
||recursive||1401||4815||4688||6459||
||binaryTrees||1466||4179||4156||4573||
||sumFile||1090||2267||1865||2470||
||fannkuch||1378||3536||2889||4092||
||spectralNorm||1418||3265||3634||4886||
||nsieve||1172||2043||1981||2706||
||nBody||2213||5194||3783||5175||

= Memory consumed results =

The method of memory measurement is pretty simple :
{{{
time --format=%M

    %M :    Maximum resident set  size  of  the  process
            during its lifetime, in Kilobytes.
}}}
The project's goal is to become part of "The Computer Language Benchmarks Game", not to implement complex memory measurement systems :).

_due to the time command bug, these results are not available_