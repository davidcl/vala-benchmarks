#summary Results of the current completed benchs.
#labels Featured,Documentation

The generated results can be found on the on the SVN :
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.csv Time bench]
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.csv Size bench]

= Versions =

  == mono -V : ==
{{{
Mono JIT compiler version 1.2.6 (tarball)
Copyright (C) 2002-2007 Novell, Inc and Contributors. www.mono-project.com
	TLS:           __thread
	GC:            Included Boehm (with typed GC)
	SIGSEGV:       altstack
	Notifications: epoll
	Architecture:  x86
	Disabled:      none
}}}

  == gcc -v : ==
{{{
gcc version 4.2.3 20080114 (prerelease) (Debian 4.2.2-7)
}}}

  == valac --version : ==
{{{
Vala 0.1.6
}}}


= Time results = 

http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||29.19||8.75||7.39||9.47||
||partialSums||34.29||21.05||21.16||21.33||
||recursive||17.92||8.91||8.20||7.63||
||binaryTrees||19.77||7.94||5.59||7.10||
||sumFile||15.89||8.76||8.19||10.79||
||fannkuch||15.97||6.84||6.36||7.87||
||spectralNorm||29.91||20.01||19.65||19.84||
||nsieve||23.20||21.61||21.69||22.05||

= Size results =

http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||1282||2599||2246||3974||
||partialSums||1414||4819||4441||3074||
||recursive||1401||4949||4801||6490||
||binaryTrees||1463||3902||4013||4592||
||sumFile||1093||2287||1890||2494||
||fannkuch||1379||3562||2913||4114||
||spectralNorm||1421||3289||3656||4896||
||nsieve||1177||2066||2005||2727||

= Memory consumed results =

The method of memory measurement is pretty simple :
{{{
time --format=%M

    %M :    Maximum resident set  size  of  the  process
            during its lifetime, in Kilobytes.
}}}
The project's goal is to become part of "The Computer Language Benchmarks Game", not to implement complex memory measurement systems :).

_due to the time command bug, these results are not available_