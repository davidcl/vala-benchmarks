#summary Results of the current completed benchs.
#labels Featured,Documentation

The generated results can be found on the on the SVN :
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.csv Time bench]
*  [http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.csv Size bench]

= Versions =

  == mono --version : ==
{{{
Mono C# compiler version 1.2.6.0
}}}

  == gcc -v : ==
{{{
gcc (GCC) 4.2.3 (Debian 4.2.3-3)
}}}

  == valac --version : ==
{{{
Vala 0.3.1
}}}


= Time results = 

http://vala-benchmarks.googlecode.com/svn/trunk/bench-time.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||29.23||8.76||7.42||9.49||
||partialSums||34.44||21.06||21.13||21.36||
||recursive||17.99||8.61||8.27||7.63||
||binaryTrees||19.12||7.85||5.62||7.12||
||sumFile||15.79||8.85||8.15||11.09||
||fannkuch||15.91||6.81||6.34||7.84||
||spectralNorm||29.89||20.20||19.67||19.78||
||nsieve||22.68||21.25||21.30||21.76||
||nBody||28.46||30.18||15.29||17.10||

= Size results =

http://vala-benchmarks.googlecode.com/svn/trunk/bench-size.png

||BenchName||Mono||Vala||plain-C||C++||
||mandelbrot||1282||2559||2209||3940||
||partialSums||1415||4779||4404||3040||
||recursive||1397||4800||4671||6444||
||binaryTrees||1464||4352||4142||4554||
||sumFile||1090||2252||1852||2455||
||fannkuch||1377||3523||2873||4079||
||spectralNorm||1418||3253||3619||4864||
||nsieve||1170||2029||1966||2691||
||nBody||2212||5554||3762||5159||

= Memory consumed results =

The method of memory measurement is pretty simple :
{{{
time --format=%M

    %M :    Maximum resident set  size  of  the  process
            during its lifetime, in Kilobytes.
}}}
The project's goal is to become part of "The Computer Language Benchmarks Game", not to implement complex memory measurement systems :).

_due to the time command bug, these results are not available_